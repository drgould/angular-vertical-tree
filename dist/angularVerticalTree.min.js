angular.module("drg.angularVerticalTree",[]).directive("verticalTree",["$compile","$templateCache","$timeout",function(e,r,t){return{restrict:"EA",scope:{items:"<treeItems",treeOpts:"<",open:"&onOpen",select:"&onSelect"},controller:"vTreeCtrl",compile:function(a){var n=a.find("vertical-tree-breadcrumb"),l=a.find("vertical-tree-leaf");return n=n&&n.length>0?n.html():"",l=l&&l.length>0?l.html():"",a.empty(),{pre:function(t,a){t.templates={breadcrumb:"drg/vTreeBreadcrumb"+t.$id+".tpl.html",leaf:"drg/vTreeLeaf"+t.$id+".tpl.html"},r.put(t.templates.breadcrumb,n),r.put(t.templates.leaf,l),a.html(e(r.get("drg/angularVerticalTree.tpl.html"))(t))},post:function(e,r){function a(){t(function(){var e=r.children().eq(0),t=e.find(".v-tree-breadcrumb"),a=0;t.each(function(){a+=$(this).outerHeight()});var n=e.find(".v-tree-branch");n.css("height","calc(100% - "+a+"px)")})}a(),e.updateBranchHeight=a}}}}}]).controller("vTreeCtrl",["$scope",function(e){function r(e,t){return angular.forEach(t,function(t,a){angular.isObject(t)?e[a]?e[a]=r(angular.isObject(e[a])?e[a]:{},t):e[a]=angular.copy(t):e[a]=t}),e}function t(){var r=e.breadcrumbs[e.breadcrumbs.length-1];if(!r)return[];var t=r[e.opts.children];return t?t.filter(e.opts.isLeaf):[]}function a(r){e.breadcrumbs.push(r),e.leaves=t(),e.updateBranchHeight(),e.$emit("verticalTree.openFolder",r),e.open&&e.open({folder:r})}function n(r){e.$emit("verticalTree.selectItem",r),e.select&&e.select({item:r})}e.opts=r({root:"Root",label:"label",children:"children",classes:{container:"panel panel-default",breadcrumb:"panel-heading",branch:"list-group",leaf:"list-group-item"},emptyMessage:"",isLeaf:function(){return!0},isFolder:function(r){return r[e.opts.children]&&r[e.opts.children].length>0}},e.treeOpts);var l={};angular.isObject(e.opts.root)?l=angular.copy(e.opts.root):l[e.opts.label]=e.opts.root,Object.defineProperty(l,e.opts.children,{get:function(){return e.items}}),e.breadcrumbs=[l],e.leaves=t(),e.leafClickHandler=function(r){e.opts.isFolder(r)?a(r):e.opts.isLeaf(r)&&n(r)},e.breadcrumbClickHandler=function(r){for(var t=0;t<e.breadcrumbs.length;t++)if(angular.equals(e.breadcrumbs[t],r)){e.breadcrumbs.splice(t,e.breadcrumbs.length-t),a(r);break}}}]),angular.module("drg.angularVerticalTree").run(["$templateCache",function(e){e.put("drg/angularVerticalTree.tpl.html",'<!-- .panel by default -->\n<div class="v-tree-container" ng-class="opts.classes.container">\n\n    <!-- .panel-heading by default -->\n    <a class="v-tree-breadcrumb"\n       href="javascript:;"\n       ng-class="opts.classes.breadcrumb"\n       ng-click="breadcrumbClickHandler(breadcrumb)"\n       ng-include="templates.breadcrumb"\n       ng-repeat="breadcrumb in breadcrumbs"\n       style="display: block;">\n    </a>\n\n    <!-- .list-group by default -->\n    <div class="v-tree-branch" ng-class="opts.classes.branch">\n        <!-- .list-group-item by default -->\n        <a class="v-tree-leaf"\n           href="javascript:;"\n           ng-class="opts.classes.leaf"\n           ng-click="leafClickHandler(leaf)"\n           ng-include="templates.leaf"\n           ng-repeat="leaf in leaves">\n        </a>\n        <p class="v-tree-empty" ng-if="!leaves || !leaves.length" ng-bind="opts.emptyMessage"></p>\n    </div>\n\n</div>\n')}]);